name: Lint and test

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint-code:
    name: Lint code
    runs-on: ubuntu-22.04
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - name: Set up environment
        uses: ./.github/actions/prepare-environment

      - name: Lint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

  lint-commit-messages:
    name: Lint commit messages
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up environment
        uses: ./.github/actions/prepare-environment

      - name: Lint commit messages
        run: |
          npm exec --no -- commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  check-for-fixup-commits:
    name: Check for fixup! commits
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for fixup! commits
        shell: bash
        run: |
          if [[ $(git log --pretty=oneline --grep=^fixup! ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}) ]]; then
            echo "fixup! commits found. Squash these before merging."
            exit 1
          fi

  test-unit:
    name: Run unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - name: Set up environment
        uses: ./.github/actions/prepare-environment

      - name: Run unit tests
        run: npm run test

  read-playwright-version:
    name: Read Playwright version
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.read-version.outputs.version }}
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - id: read-version
        name: Read Playwright version
        run: |
          echo "version=$(scripts/get-playwright-version.sh)" >> "$GITHUB_OUTPUT"

  test-e2e:
    name: Run e2e tests
    runs-on: ubuntu-22.04
    needs:
      - read-playwright-version
    container:
      image: mcr.microsoft.com/playwright:${{ needs.read-playwright-version.outputs.version }}-jammy
      options: --user 1001
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - name: Set up environment
        uses: ./.github/actions/prepare-environment

      - name: Run e2e tests
        run: npm run test:e2e

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: e2e/output

  test-visual-regression:
    name: Run visual regression tests
    runs-on: ubuntu-22.04
    needs:
      - read-playwright-version
    container:
      image: mcr.microsoft.com/playwright:${{ needs.read-playwright-version.outputs.version }}-jammy
      options: --user 1001
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - name: Set up environment
        uses: ./.github/actions/prepare-environment

      - name: Run visual regression tests
        run: npm run test:visual:native

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: visual-regression-test-results
          path: e2e/output

  audit-dependencies:
    name: Audit dependencies
    runs-on: ubuntu-22.04
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - name: Set up environment
        uses: ./.github/actions/prepare-environment

      - name: Run audit
        run: npm audit
